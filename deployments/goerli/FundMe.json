{
  "address": "0x9b188bBa2Ab5159A6cA42A90CDfd58d204E6C8B2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funderToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x73077c8f76f46c46a1f763db959e3ffac09c0021f12f243225e2b99613293f54",
  "receipt": {
    "to": null,
    "from": "0x0d251642A1B8D29554d43f3F1749717B0Ca5Ab84",
    "contractAddress": "0x9b188bBa2Ab5159A6cA42A90CDfd58d204E6C8B2",
    "transactionIndex": 40,
    "gasUsed": "924292",
    "logsBloom": "0x
    "blockHash": "0x41b58a0bc9d79419f963378da3218b51320e9eac73c85459d296437ee182b167",
    "transactionHash": "0x73077c8f76f46c46a1f763db959e3ffac09c0021f12f243225e2b99613293f54",
    "logs": [],
    "blockNumber": 9002117,
    "cumulativeGasUsed": "5274493",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "d7f287773e9c4e8cf077a3810ae614fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funderToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    address[] public funders;\\n    mapping(address => uint256) public funderToAmount;\\n    address public owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    uint256 minimumUsd = 50 * 10 ** 18; // The decimals must match to ethAmountInUSD, which has 18 decimals places.\\n\\n    function fund() public payable {\\n        // Minimum in USD\\n        // 1. Eth to contract\\n        require(msg.value.getConversionRate(priceFeed) >= 1e18, \\\"Send more\\\"); // Math done in WEI. 1ETH=1e18;\\n        // revert: desfaz tudo de antes e devolve todo o g\\u00e1s que vem depois do require\\n        funders.push(msg.sender);\\n        funderToAmount[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public isOwner {\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed!\\\");\\n        for (uint256 index = 0; index < funders.length; index++) {\\n            funderToAmount[funders[index]] = 0;\\n        }\\n        funders = new address[](0); // Instead of loop and cost gas, we refresh the whole list.\\n        // We create a fresh new (NEW) list of addresses (ADDRESSES[]) with Zero elements (0).\\n    }\\n\\n    modifier isOwner() {\\n        require(msg.sender == owner, \\\"U no ADM, B Gone!\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xf01f43c8a0b7902db071ced3ed01e7acbb90b70fe17be695736974e42290966b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //abi\\n        //Address : 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggV3Interface is an interface which, when @address_contract, allows to\\n        // access certain functions of the contract of this address. These functions are defined\\n        //in the code of the interface\\n        (, int ethUsd, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(ethUsd * 1e10); // To the 10th since decimals are 8 (10 + 8)\\n        // PS: These decimals are precision, not Wei\\n    }\\n\\n    // Gets the number of decimals\\n    function getDecimals(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint8) {\\n        return priceFeed.decimals();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmountInWei,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmountInWei) / 1e18; // Since there is 1e18 in both param.\\n        // My interpretation: \\\"Multiply\\\" by (1/10**18)(eth/Wei), but 18 decimals remain for precision.\\n        return ethAmountInUsd; // 18 dec of precision\\n    }\\n}\\n\",\"keccak256\":\"0x68415679a9b6181b5870b338c12690f12f10f5c531de4b14b8e2b79c9631f4e1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060045534801561001d57600080fd5b5060405162000ff038038062000ff08339818101604052810190610041919061012c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f9826100ce565b9050919050565b610109816100ee565b811461011457600080fd5b50565b60008151905061012681610100565b92915050565b600060208284031215610142576101416100c9565b5b600061015084828501610117565b91505092915050565b610e8780620001696000396000f3fe6080604052600436106100555760003560e01c80633ccfd60b1461005a5780634407e1e814610071578063741bef1a146100ae5780638da5cb5b146100d9578063b60d428814610104578063dc0d3dff1461010e575b600080fd5b34801561006657600080fd5b5061006f61014b565b005b34801561007d57600080fd5b5061009860048036038101906100939190610753565b610390565b6040516100a59190610799565b60405180910390f35b3480156100ba57600080fd5b506100c36103a8565b6040516100d09190610813565b60405180910390f35b3480156100e557600080fd5b506100ee6103ce565b6040516100fb919061083d565b60405180910390f35b61010c6103f4565b005b34801561011a57600080fd5b5061013560048036038101906101309190610884565b61052e565b604051610142919061083d565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d29061090e565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102019061095f565b60006040518083038185875af1925050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b5050905080610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906109c0565b60405180910390fd5b60005b60008054905081101561032c576000600160008084815481106102b0576102af6109e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061032490610a3e565b91505061028a565b50600067ffffffffffffffff81111561034857610347610a87565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c929190610649565b5050565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000610432600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056d90919063ffffffff16565b1015610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610b02565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105259190610b22565b92505081905550565b6000818154811061053e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610579836105a9565b90506000670de0b6b3a764000085836105929190610b78565b61059c9190610c01565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190610cbf565b5050509150506402540be400816106419190610d3a565b915050919050565b8280548282559060005260206000209081019282156106c2579160200282015b828111156106c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610669565b5b5090506106cf91906106d3565b5090565b5b808211156106ec5760008160009055506001016106d4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610720826106f5565b9050919050565b61073081610715565b811461073b57600080fd5b50565b60008135905061074d81610727565b92915050565b600060208284031215610769576107686106f0565b5b60006107778482850161073e565b91505092915050565b6000819050919050565b61079381610780565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6000819050919050565b60006107d96107d46107cf846106f5565b6107b4565b6106f5565b9050919050565b60006107eb826107be565b9050919050565b60006107fd826107e0565b9050919050565b61080d816107f2565b82525050565b60006020820190506108286000830184610804565b92915050565b61083781610715565b82525050565b6000602082019050610852600083018461082e565b92915050565b61086181610780565b811461086c57600080fd5b50565b60008135905061087e81610858565b92915050565b60006020828403121561089a576108996106f0565b5b60006108a88482850161086f565b91505092915050565b600082825260208201905092915050565b7f55206e6f2041444d2c204220476f6e6521000000000000000000000000000000600082015250565b60006108f86011836108b1565b9150610903826108c2565b602082019050919050565b60006020820190508181036000830152610927816108eb565b9050919050565b600081905092915050565b50565b600061094960008361092e565b915061095482610939565b600082019050919050565b600061096a8261093c565b9150819050919050565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b60006109aa600c836108b1565b91506109b582610974565b602082019050919050565b600060208201905081810360008301526109d98161099d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4982610780565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7c57610a7b610a0f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206d6f72650000000000000000000000000000000000000000000000600082015250565b6000610aec6009836108b1565b9150610af782610ab6565b602082019050919050565b60006020820190508181036000830152610b1b81610adf565b9050919050565b6000610b2d82610780565b9150610b3883610780565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b6d57610b6c610a0f565b5b828201905092915050565b6000610b8382610780565b9150610b8e83610780565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc757610bc6610a0f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0c82610780565b9150610c1783610780565b925082610c2757610c26610bd2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5181610c32565b8114610c5c57600080fd5b50565b600081519050610c6e81610c48565b92915050565b6000819050919050565b610c8781610c74565b8114610c9257600080fd5b50565b600081519050610ca481610c7e565b92915050565b600081519050610cb981610858565b92915050565b600080600080600060a08688031215610cdb57610cda6106f0565b5b6000610ce988828901610c5f565b9550506020610cfa88828901610c95565b9450506040610d0b88828901610caa565b9350506060610d1c88828901610caa565b9250506080610d2d88828901610c5f565b9150509295509295909350565b6000610d4582610c74565b9150610d5083610c74565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8f57610d8e610a0f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dcc57610dcb610a0f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0957610e08610a0f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4657610e45610a0f565b5b82820290509291505056fea26469706673582212203fe45b76551b576ce36759e105c20ee8ef7380296c0f342b6ba76d4dbb58dde064736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80633ccfd60b1461005a5780634407e1e814610071578063741bef1a146100ae5780638da5cb5b146100d9578063b60d428814610104578063dc0d3dff1461010e575b600080fd5b34801561006657600080fd5b5061006f61014b565b005b34801561007d57600080fd5b5061009860048036038101906100939190610753565b610390565b6040516100a59190610799565b60405180910390f35b3480156100ba57600080fd5b506100c36103a8565b6040516100d09190610813565b60405180910390f35b3480156100e557600080fd5b506100ee6103ce565b6040516100fb919061083d565b60405180910390f35b61010c6103f4565b005b34801561011a57600080fd5b5061013560048036038101906101309190610884565b61052e565b604051610142919061083d565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d29061090e565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516102019061095f565b60006040518083038185875af1925050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b5050905080610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906109c0565b60405180910390fd5b60005b60008054905081101561032c576000600160008084815481106102b0576102af6109e0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061032490610a3e565b91505061028a565b50600067ffffffffffffffff81111561034857610347610a87565b5b6040519080825280602002602001820160405280156103765781602001602082028036833780820191505090505b506000908051906020019061038c929190610649565b5050565b60016020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000610432600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056d90919063ffffffff16565b1015610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610b02565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105259190610b22565b92505081905550565b6000818154811061053e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610579836105a9565b90506000670de0b6b3a764000085836105929190610b78565b61059c9190610c01565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190610cbf565b5050509150506402540be400816106419190610d3a565b915050919050565b8280548282559060005260206000209081019282156106c2579160200282015b828111156106c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610669565b5b5090506106cf91906106d3565b5090565b5b808211156106ec5760008160009055506001016106d4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610720826106f5565b9050919050565b61073081610715565b811461073b57600080fd5b50565b60008135905061074d81610727565b92915050565b600060208284031215610769576107686106f0565b5b60006107778482850161073e565b91505092915050565b6000819050919050565b61079381610780565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6000819050919050565b60006107d96107d46107cf846106f5565b6107b4565b6106f5565b9050919050565b60006107eb826107be565b9050919050565b60006107fd826107e0565b9050919050565b61080d816107f2565b82525050565b60006020820190506108286000830184610804565b92915050565b61083781610715565b82525050565b6000602082019050610852600083018461082e565b92915050565b61086181610780565b811461086c57600080fd5b50565b60008135905061087e81610858565b92915050565b60006020828403121561089a576108996106f0565b5b60006108a88482850161086f565b91505092915050565b600082825260208201905092915050565b7f55206e6f2041444d2c204220476f6e6521000000000000000000000000000000600082015250565b60006108f86011836108b1565b9150610903826108c2565b602082019050919050565b60006020820190508181036000830152610927816108eb565b9050919050565b600081905092915050565b50565b600061094960008361092e565b915061095482610939565b600082019050919050565b600061096a8261093c565b9150819050919050565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b60006109aa600c836108b1565b91506109b582610974565b602082019050919050565b600060208201905081810360008301526109d98161099d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4982610780565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7c57610a7b610a0f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206d6f72650000000000000000000000000000000000000000000000600082015250565b6000610aec6009836108b1565b9150610af782610ab6565b602082019050919050565b60006020820190508181036000830152610b1b81610adf565b9050919050565b6000610b2d82610780565b9150610b3883610780565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b6d57610b6c610a0f565b5b828201905092915050565b6000610b8382610780565b9150610b8e83610780565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc757610bc6610a0f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0c82610780565b9150610c1783610780565b925082610c2757610c26610bd2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5181610c32565b8114610c5c57600080fd5b50565b600081519050610c6e81610c48565b92915050565b6000819050919050565b610c8781610c74565b8114610c9257600080fd5b50565b600081519050610ca481610c7e565b92915050565b600081519050610cb981610858565b92915050565b600080600080600060a08688031215610cdb57610cda6106f0565b5b6000610ce988828901610c5f565b9550506020610cfa88828901610c95565b9450506040610d0b88828901610caa565b9350506060610d1c88828901610caa565b9250506080610d2d88828901610c5f565b9150509295509295909350565b6000610d4582610c74565b9150610d5083610c74565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8f57610d8e610a0f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dcc57610dcb610a0f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0957610e08610a0f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4657610e45610a0f565b5b82820290509291505056fea26469706673582212203fe45b76551b576ce36759e105c20ee8ef7380296c0f342b6ba76d4dbb58dde064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funderToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 87,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}